[tool.poetry]
name = "{{cookiecutter.project_slug}}"
version = "0.1.0"
description = "shawn deng repo temple project"
authors = ["{{cookiecutter.full_name}} <{{cookiecutter.email}}>"]
license = "MIT"
readme = {file = "README.md", content-type = "text/markdown"}

[tool.poetry.dependencies]
python = "^3.12"
{% if cookiecutter.include_cli == 'y' %}
click = "^8.1.7"
{% endif %}

[tool.poetry.group.dev.dependencies]
ruff = "^0.8.4"
pre-commit = "^4.0.1"
commitizen = "^4.1.0"

[tool.poetry.group.test.dependencies]
pytest = "^8.0.0"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"

{% if cookiecutter.include_cli == 'y' %}
[tool.poetry.scripts]
{{cookiecutter.project_slug}} = "{{cookiecutter.project_slug}}.cli:cli"
{% endif %}

[tool.ruff]
line-length = 120
include = ["pyproject.toml", "{{cookiecutter.project_slug}}/**/*.py"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "D"  # pydocstyle
]

ignore = [
    "W191",  # indentation contains tabs
    "D401"  # imperative mood
]

[tool.ruff.lint.isort]
force-single-line = true
lines-after-imports = 2

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "$version"
version_scheme = "semver2"
version_provider = "poetry"
update_changelog_on_bump = true
major_version_zero = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
